(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{62:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"路径匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径匹配","aria-hidden":"true"}},[s._v("#")]),s._v(" 路径匹配")]),a("p",[s._v("在Nuxt.js中，如果使用如下方式进行引入：")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("@"),a("span",{attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("url")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'~assets/css/style.css'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("//Error")]),s._v("\n")])]),a("p",[s._v("以上路径匹配是错误的，而我们采用下面的方式是正确的：")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("@"),a("span",{attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("url")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'~/assets/css/style.css'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("//success")]),s._v("\n")])]),a("p",[s._v("也就是说，在最新版本更新中，官方修复了路径匹配问题：")]),a("p",[s._v("而官方推荐使用"),a("code",[s._v("~/assets")]),s._v("匹配路径，而不是使用在"),a("strong",[s._v("中文文档")]),s._v("中的~assets去匹配路径。")]),a("p",[s._v("而在"),a("strong",[s._v("中文文档")]),s._v("中，也并未见修复及更改此问题。")])])}],!1,null,null,null);t.default=e.exports}}]);